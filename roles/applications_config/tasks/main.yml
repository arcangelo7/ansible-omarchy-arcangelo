---
# Alacritty terminal configuration
- name: Configure Alacritty terminal
  ansible.builtin.template:
    src: alacritty.toml.j2
    dest: "{{ ansible_env.HOME }}/.config/alacritty/alacritty.toml"
    mode: '0644'
    backup: yes

# Set default browser
- name: Ensure .config directory exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config"
    state: directory
    mode: '0755'

- name: Set default browser for HTTP/HTTPS
  community.general.ini_file:
    path: "{{ ansible_env.HOME }}/.config/mimeapps.list"
    section: "Default Applications"
    option: "{{ item }}"
    value: "{{ default_browser }}"
    mode: '0644'
    backup: yes
  loop:
    - "text/html"
    - "x-scheme-handler/http"
    - "x-scheme-handler/https"
    - "x-scheme-handler/about"
    - "x-scheme-handler/unknown"

- name: Set system default browser using xdg-settings
  ansible.builtin.command:
    cmd: xdg-settings set default-web-browser {{ default_browser }}
  changed_when: true

# Override omarchy-launch-webapp to use Brave for web apps
- name: Ensure ~/.local/bin directory exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/bin"
    state: directory
    mode: '0755'

- name: Deploy wrapper script to use Brave for web apps
  ansible.builtin.copy:
    src: omarchy-launch-webapp
    dest: "{{ ansible_env.HOME }}/.local/bin/omarchy-launch-webapp"
    mode: '0755'

# Set Visual Studio Code as default text editor
- name: Set VSCode as default editor for text files
  community.general.ini_file:
    path: "{{ ansible_env.HOME }}/.config/mimeapps.list"
    section: "Default Applications"
    option: "{{ item }}"
    value: "{{ default_text_editor }}"
    mode: '0644'
    backup: yes
  loop:
    - "text/plain"
    - "text/markdown"
    - "text/x-python"
    - "text/x-yaml"
    - "application/json"
    - "text/x-shellscript"
    - "text/x-csrc"
    - "text/x-c++src"
    - "text/x-java"
    - "text/css"
    - "text/javascript"
    - "application/xml"
    - "text/x-log"
    - "application/x-yaml"
    - "application/x-shellscript"

# Configure Firefox custom preferences
- name: Find Firefox profile directory
  ansible.builtin.shell: |
    find {{ ansible_env.HOME }}/.mozilla/firefox -maxdepth 1 -name "*.default*" -type d | head -1
  register: firefox_profile
  changed_when: false
  failed_when: firefox_profile.stdout == ""

- name: Deploy Firefox custom preferences (user.js)
  ansible.builtin.template:
    src: firefox-user.js.j2
    dest: "{{ firefox_profile.stdout }}/user.js"
    mode: '0644'
    backup: yes
  when: firefox_profile.stdout != ""

- name: Ensure Firefox distribution directory exists
  ansible.builtin.file:
    path: /usr/lib/firefox/distribution
    state: directory
    mode: '0755'
  become: true

- name: Deploy Firefox enterprise policies (extensions auto-install)
  ansible.builtin.template:
    src: firefox-policies.json.j2
    dest: /usr/lib/firefox/distribution/policies.json
    mode: '0644'
    backup: yes
  become: true

# Configure Thunderbird custom preferences
- name: Find Thunderbird profile directory
  ansible.builtin.shell: |
    find {{ ansible_env.HOME }}/.thunderbird -maxdepth 1 -name "*.default*" -type d | head -1
  register: thunderbird_profile
  changed_when: false
  failed_when: false

- name: Deploy Thunderbird custom preferences (user.js)
  ansible.builtin.template:
    src: thunderbird-user.js.j2
    dest: "{{ thunderbird_profile.stdout }}/user.js"
    mode: '0644'
    backup: yes
  when: thunderbird_profile.stdout != ""

- name: Ensure Thunderbird distribution directory exists
  ansible.builtin.file:
    path: /usr/lib/thunderbird/distribution
    state: directory
    mode: '0755'
  become: true
  when: thunderbird_profile.stdout != ""

- name: Deploy Thunderbird enterprise policies (extensions auto-install)
  ansible.builtin.template:
    src: thunderbird-policies.json.j2
    dest: /usr/lib/thunderbird/distribution/policies.json
    mode: '0644'
    backup: yes
  become: true
  when: thunderbird_profile.stdout != ""

- name: Ensure local applications directory exists
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.local/share/applications"
    state: directory
    mode: '0755'

- name: Override Thunderbird desktop file to use XWayland
  ansible.builtin.copy:
    content: |
      [Desktop Entry]
      Name=Thunderbird
      Comment=Send and receive mail with Thunderbird
      GenericName=Mail Client
      Exec=env GDK_BACKEND=x11 thunderbird %u
      Terminal=false
      Type=Application
      Icon=org.mozilla.Thunderbird
      Categories=Network;Email;
      MimeType=message/rfc822;x-scheme-handler/mailto;text/calendar;text/vcard;text/x-vcard;x-scheme-handler/webcal;x-scheme-handler/webcals;x-scheme-handler/mid;
      StartupNotify=true
      StartupWMClass=thunderbird
      Actions=ComposeMessage;OpenAddressBook;

      [Desktop Action ComposeMessage]
      Name=Write new message
      Exec=env GDK_BACKEND=x11 thunderbird -compose

      [Desktop Action OpenAddressBook]
      Name=Open address book
      Exec=env GDK_BACKEND=x11 thunderbird -addressbook
    dest: "{{ ansible_env.HOME }}/.local/share/applications/org.mozilla.Thunderbird.desktop"
    mode: '0644'
  when: thunderbird_profile.stdout != ""

- name: Hide developer tools from application launcher
  ansible.builtin.copy:
    content: |
      [Desktop Entry]
      NoDisplay=true
    dest: "{{ ansible_env.HOME }}/.local/share/applications/{{ item.name }}"
    mode: '0644'
  loop: "{{ hidden_from_launcher }}"
  when: hidden_from_launcher is defined and hidden_from_launcher | length > 0
