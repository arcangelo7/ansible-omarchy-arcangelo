---
- name: Remove bloatware packages
  community.general.pacman:
    name: "{{ item }}"
    state: absent
  loop: "{{ bloatware_packages }}"
  when: bloatware_packages is defined and bloatware_packages | length > 0
  become: yes
  ignore_errors: yes
  register: bloatware_removal_result

- name: Show bloatware removal results
  debug:
    msg: "Package {{ item.item }} - Status: {{ 'Removed' if item.changed else 'Not present or error' }}"
  loop: "{{ bloatware_removal_result.results }}"
  when: bloatware_removal_result is defined

- name: Remove 1Password configuration files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop: "{{ onepassword_config_files }}"
  when: onepassword_config_files is defined and onepassword_config_files | length > 0
  ignore_errors: yes
  register: onepassword_files_removal_result

- name: Show 1Password files removal results
  debug:
    msg: "File {{ item.item }} - Status: {{ 'Removed' if item.changed else 'Not present or error' }}"
  loop: "{{ onepassword_files_removal_result.results }}"
  when: onepassword_files_removal_result is defined

- name: Remove 1Password reference from Hyprland apps.conf
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.local/share/omarchy/default/hypr/apps.conf"
    regexp: "^source.*1password\\.conf$"
    state: absent
  ignore_errors: yes
  register: onepassword_apps_conf_removal

- name: Show apps.conf update result
  debug:
    msg: "1Password reference in apps.conf - Status: {{ 'Removed' if onepassword_apps_conf_removal.changed else 'Not present' }}"
  when: onepassword_apps_conf_removal is defined

- name: Reload Hyprland configuration after 1Password removal
  ansible.builtin.command: hyprctl reload
  ignore_errors: yes
  when: onepassword_apps_conf_removal.changed
  register: hyprland_reload_result

- name: Show Hyprland reload result
  debug:
    msg: "Hyprland reload - Status: {{ 'Success' if hyprland_reload_result.rc == 0 else 'Failed' }}"
  when: hyprland_reload_result is defined and not hyprland_reload_result.skipped | default(false)

- name: Remove Basecamp web app files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop: "{{ basecamp_webapp_files }}"
  when: basecamp_webapp_files is defined and basecamp_webapp_files | length > 0
  ignore_errors: yes
  register: basecamp_files_removal_result

- name: Show Basecamp files removal results
  debug:
    msg: "File {{ item.item }} - Status: {{ 'Removed' if item.changed else 'Not present or error' }}"
  loop: "{{ basecamp_files_removal_result.results }}"
  when: basecamp_files_removal_result is defined

- name: Remove Google Contacts web app files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop: "{{ google_contacts_webapp_files }}"
  when: google_contacts_webapp_files is defined and google_contacts_webapp_files | length > 0
  ignore_errors: yes
  register: google_contacts_files_removal_result

- name: Show Google Contacts files removal results
  debug:
    msg: "File {{ item.item }} - Status: {{ 'Removed' if item.changed else 'Not present or error' }}"
  loop: "{{ google_contacts_files_removal_result.results }}"
  when: google_contacts_files_removal_result is defined

- name: Remove Google Messages web app files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop: "{{ google_messages_webapp_files }}"
  when: google_messages_webapp_files is defined and google_messages_webapp_files | length > 0
  ignore_errors: yes
  register: google_messages_files_removal_result

- name: Show Google Messages files removal results
  debug:
    msg: "File {{ item.item }} - Status: {{ 'Removed' if item.changed else 'Not present or error' }}"
  loop: "{{ google_messages_files_removal_result.results }}"
  when: google_messages_files_removal_result is defined

- name: Remove Google Messages keybinding from bindings.conf
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.config/hypr/bindings.conf"
    regexp: "^bindd.*SUPER ALT.*G.*Google Messages.*$"
    state: absent
  ignore_errors: yes
  register: google_messages_keybinding_removal

- name: Show Google Messages keybinding removal result
  debug:
    msg: "Google Messages keybinding - Status: {{ 'Removed' if google_messages_keybinding_removal.changed else 'Not present' }}"
  when: google_messages_keybinding_removal is defined

- name: Reload Hyprland configuration after Google Messages removal
  ansible.builtin.command: hyprctl reload
  ignore_errors: yes
  when: google_messages_keybinding_removal.changed
  register: google_messages_hyprland_reload

- name: Show Hyprland reload result after Google Messages removal
  debug:
    msg: "Hyprland reload - Status: {{ 'Success' if google_messages_hyprland_reload.rc == 0 else 'Failed' }}"
  when: google_messages_hyprland_reload is defined and not google_messages_hyprland_reload.skipped | default(false)

- name: Remove Google Photos web app files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop: "{{ google_photos_webapp_files }}"
  when: google_photos_webapp_files is defined and google_photos_webapp_files | length > 0
  ignore_errors: yes
  register: google_photos_files_removal_result

- name: Show Google Photos files removal results
  debug:
    msg: "File {{ item.item }} - Status: {{ 'Removed' if item.changed else 'Not present or error' }}"
  loop: "{{ google_photos_files_removal_result.results }}"
  when: google_photos_files_removal_result is defined

- name: Remove HEY web app files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop: "{{ hey_webapp_files }}"
  when: hey_webapp_files is defined and hey_webapp_files | length > 0
  ignore_errors: yes
  register: hey_files_removal_result

- name: Show HEY files removal results
  debug:
    msg: "File {{ item.item }} - Status: {{ 'Removed' if item.changed else 'Not present or error' }}"
  loop: "{{ hey_files_removal_result.results }}"
  when: hey_files_removal_result is defined

- name: Remove Signal configuration files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop: "{{ signal_config_files }}"
  when: signal_config_files is defined and signal_config_files | length > 0
  ignore_errors: yes
  register: signal_files_removal_result

- name: Show Signal files removal results
  debug:
    msg: "File {{ item.item }} - Status: {{ 'Removed' if item.changed else 'Not present or error' }}"
  loop: "{{ signal_files_removal_result.results }}"
  when: signal_files_removal_result is defined

- name: Remove Signal keybinding from bindings.conf
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.config/hypr/bindings.conf"
    regexp: "^bindd.*SUPER.*G.*Signal.*$"
    state: absent
  ignore_errors: yes
  register: signal_keybinding_removal

- name: Show Signal keybinding removal result
  debug:
    msg: "Signal keybinding - Status: {{ 'Removed' if signal_keybinding_removal.changed else 'Not present' }}"
  when: signal_keybinding_removal is defined

- name: Update WhatsApp keybinding to Super+G
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.config/hypr/bindings.conf"
    regexp: "^bindd = SUPER SHIFT, G, WhatsApp,.*$"
    line: "bindd = SUPER, G, WhatsApp, exec, omarchy-launch-or-focus-webapp WhatsApp \"https://web.whatsapp.com/\""
    state: present
  ignore_errors: yes
  register: whatsapp_keybinding_update

- name: Show WhatsApp keybinding update result
  debug:
    msg: "WhatsApp keybinding - Status: {{ 'Updated to Super+G' if whatsapp_keybinding_update.changed else 'Already correct or not present' }}"
  when: whatsapp_keybinding_update is defined

- name: Reload Hyprland configuration after Signal removal
  ansible.builtin.command: hyprctl reload
  ignore_errors: yes
  when: signal_keybinding_removal.changed or whatsapp_keybinding_update.changed
  register: signal_hyprland_reload

- name: Show Hyprland reload result after Signal removal
  debug:
    msg: "Hyprland reload - Status: {{ 'Success' if signal_hyprland_reload.rc == 0 else 'Failed' }}"
  when: signal_hyprland_reload is defined and not signal_hyprland_reload.skipped | default(false)
